{"version":3,"sources":["assets/logoFont.png","assets/logoOnScreen.png","components/AppBar.js","components/BottomNavigation.js","components/Categories.js","components/SimpleList.js","components/Products.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","toolBar","justifyContent","bottomToolbar","background","minHeight","LogoAppBar","classes","className","AppBar","position","style","boxShadow","Toolbar","src","logoFont","alt","Button","color","createMuiTheme","palette","primary","main","width","overflow","bottom","backgroundColor","BottomNavigate","React","useState","Number","localStorage","getItem","value","setValue","BottomNavigation","onChange","event","newValue","setItem","showLabels","BottomNavigationAction","component","Link","to","label","icon","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","Categories","bull","Card","CardContent","Typography","gutterBottom","variant","CardActions","size","maxWidth","paper","ListItemLink","props","ListItem","button","SimpleList","List","aria-label","ListItemIcon","ListItemText","Divider","href","flexWrap","spacing","height","Products","Paper","elevation","App","logoOnScreen","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Fragment","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4801e56c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoFont.4429dcd1.png\";","module.exports = __webpack_public_path__ + \"static/media/logoOnScreen.db1b4dfe.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport logoFont from \"../assets/logoFont.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolBar: {\n    // background: \"#212121\",\n\n    justifyContent: \"space-between\",\n  },\n\n  bottomToolbar: {\n    background: \"#E5E5E5\",\n    minHeight: \"5px\",\n  },\n}));\n\nexport default function LogoAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{ background: \"transparent\", boxShadow: \"none\" }}\n      >\n        <Toolbar className={classes.toolBar}>\n          <img src={logoFont} alt=\"logo\" />\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport ViewAgendaIcon from \"@material-ui/icons/ViewAgenda\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#f3d250\",\n    },\n  },\n});\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    overflow: \"hidden\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"#435E77\",\n  },\n});\n\nexport default function BottomNavigate() {\n  const classes = useStyles();\n  const initialState = () => Number(localStorage.getItem(\"TabValue\") || 0);\n  const [value, setValue] = React.useState(initialState);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          localStorage.setItem(\"TabValue\", newValue);\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.root}\n      >\n        <BottomNavigationAction\n          component={Link}\n          to=\"/list_on_the_fridge/SimpleList\"\n          label=\"List\"\n          icon={<FormatListNumberedIcon />}\n        />\n        <BottomNavigationAction\n          component={Link}\n          to=\"/list_on_the_fridge/Categories\"\n          label=\"Categories\"\n          icon={<ViewAgendaIcon />}\n        />\n        <BottomNavigationAction\n          component={Link}\n          to=\"/list_on_the_fridge/Products\"\n          label=\"Products\"\n          icon={<FastfoodIcon />}\n        />\n      </BottomNavigation>\n    </MuiThemeProvider>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Categories() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>â€¢</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          be{bull}nev{bull}o{bull}lent\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function SimpleList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Inbox\" />\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Drafts\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem button>\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n        <ListItemLink href=\"#simple-list\">\n          <ListItemText primary=\"Spam\" />\n        </ListItemLink>\n      </List>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\n\nexport default function Products() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} />\n      <Paper />\n      <Paper elevation={3} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport LogoAppBar from \"./components/AppBar.js\";\nimport BottomNavigate from \"./components/BottomNavigation.js\";\nimport \"./App.css\";\nimport logoOnScreen from \"./assets/logoOnScreen.png\";\nimport Categories from \"./components/Categories.js\";\nimport SimpleList from \"./components/SimpleList.js\";\nimport Products from \"./components/Products.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LogoAppBar />\n\n      <header className=\"App-header\">\n        <img src={logoOnScreen} className=\"App-logo\" alt=\"logo\" />\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/list_on_the_fridge/SimpleList\">\n                <SimpleList />\n              </Route>\n              <Route path=\"/list_on_the_fridge/Categories\">\n                <Categories />\n              </Route>\n              <Route path=\"/list_on_the_fridge/Products\">\n                <Products />\n              </Route>\n            </Switch>\n          </div>\n\n          <BottomNavigate />\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}